name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    outputs:
      static_web_app_url: ${{ steps.builddeploy.outputs.static_web_app_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_KIND_FOREST_0A2495410 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "frontend" # App source code path
          api_location: "api" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_KIND_FOREST_0A2495410 }}
          action: "close"
          app_location: "frontend"
          api_location: "api"
          output_location: ""

  e2e_and_api_tests:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    needs: build_and_deploy_job
    name: E2E and API Tests

    steps:
      - name: Wait for deployment URL
        run: |
          echo "Waiting for deployment to be live at ${{ needs.build_and_deploy_job.outputs.static_web_app_url }}"
          end_time=$(( $(date +%s) + 120 ))
          while true; do
            status_code=$(curl -o /dev/null -s -w "%{http_code}" "${{ needs.build_and_deploy_job.outputs.static_web_app_url }}")
            if [ "$status_code" -eq 200 ]; then
              echo "Deployment is live!"
              break
            fi
            if [ $(date +%s) -gt $end_time ]; then
              echo "Timeout waiting for deployment."
              exit 1
            fi
            echo "Received status code $status_code. Retrying in 5 seconds..."
            sleep 5
          done
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

      - name: Run Backend Unit Tests (No API Key)
        run: python -m pytest -m "not integration"

      - name: Run API Integration Test (With API Key)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python -m pytest -m integration

      - name: Run Frontend E2E Tests
        run: npx playwright test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.build_and_deploy_job.outputs.static_web_app_url }}
